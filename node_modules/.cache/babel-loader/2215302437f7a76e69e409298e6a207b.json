{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nconst useFetch = url => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [isLoading, setLoading] = useState(true);\n  const [Errors, setErrors] = useState(null);\n  useEffect(() => {\n    const abortCont = new AbortController();\n    setTimeout(() => {\n      fetch(url, {\n        signal: abortCont.signal\n      }).then(res => {\n        if (!res.ok) {\n          throw Error('data couldnt be fetched from ressource');\n        }\n\n        return res.json();\n      }).then(data => {\n        setData(data);\n        setLoading(false);\n        setErrors(null);\n      }).catch(err => {\n        if (err.name == 'AbortError') {\n          console.log('fetch aborted');\n        } else {\n          setLoading(false);\n          setErrors(err.message);\n        }\n      });\n    }, 2000);\n    return () => abortCont.abort();\n  }, [url]);\n  return {\n    data,\n    isLoading,\n    Errors\n  };\n};\n\n_s(useFetch, \"A7/WbniOKOGmRHC22kHElmpeYDg=\");\n\nexport default useFetch;","map":{"version":3,"sources":["C:/Users/dell/Desktop/ReactJs/react-app/src/useFetch.js"],"names":["useState","useEffect","useFetch","url","data","setData","isLoading","setLoading","Errors","setErrors","abortCont","AbortController","setTimeout","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AAAA;;AACtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACM,SAAD,EAAaC,UAAb,IAA2BP,QAAQ,CAAC,IAAD,CAAzC;AACA,QAAM,CAACQ,MAAD,EAAUC,SAAV,IAAuBT,QAAQ,CAAE,IAAF,CAArC;AAGAC,EAAAA,SAAS,CAAE,MAAK;AAEZ,UAAMS,SAAS,GAAG,IAAIC,eAAJ,EAAlB;AAEAC,IAAAA,UAAU,CAAG,MAAI;AACbC,MAAAA,KAAK,CAACV,GAAD,EAAO;AAACW,QAAAA,MAAM,EAAGJ,SAAS,CAACI;AAApB,OAAP,CAAL,CACCC,IADD,CACMC,GAAG,IAAI;AACT,YAAI,CAACA,GAAG,CAACC,EAAT,EAAY;AACR,gBAAMC,KAAK,CAAC,wCAAD,CAAX;AACH;;AACD,eAAOF,GAAG,CAACG,IAAJ,EAAP;AACH,OAND,EAMGJ,IANH,CAOIX,IAAI,IAAI;AACJC,QAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,QAAAA,SAAS,CAAC,IAAD,CAAT;AACH,OAXL,EAWOW,KAXP,CAWcC,GAAG,IAAG;AACZ,YAAIA,GAAG,CAACC,IAAJ,IAAY,YAAhB,EAA6B;AACzBC,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACH,SAFD,MAGK;AACDjB,UAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,UAAAA,SAAS,CAACY,GAAG,CAACI,OAAL,CAAT;AACH;AAEJ,OApBL;AAsBE,KAvBI,EAuBD,IAvBC,CAAV;AAyBK,WAAO,MAAMf,SAAS,CAACgB,KAAV,EAAb;AACN,GA9BM,EA8BJ,CAACvB,GAAD,CA9BI,CAAT;AAgCE,SAAO;AACHC,IAAAA,IADG;AACGE,IAAAA,SADH;AACeE,IAAAA;AADf,GAAP;AAIL,CA1CD;;GAAMN,Q;;AA4CN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst useFetch = (url) => {\r\n    const [data, setData] = useState(null);\r\n    const [isLoading , setLoading] = useState(true);\r\n    const [Errors , setErrors] = useState (null);\r\n\r\n\r\n    useEffect( ()=> {\r\n\r\n        const abortCont = new AbortController();\r\n\r\n        setTimeout ( ()=>{\r\n            fetch(url , {signal : abortCont.signal})\r\n            .then(res => {\r\n                if (!res.ok){\r\n                    throw Error('data couldnt be fetched from ressource')\r\n                }\r\n                return res.json();\r\n            }).then(\r\n                data => {\r\n                    setData(data);\r\n                    setLoading(false);\r\n                    setErrors(null);\r\n                }).catch (err =>{\r\n                    if (err.name == 'AbortError'){\r\n                        console.log('fetch aborted');\r\n                    }\r\n                    else {\r\n                        setLoading(false);\r\n                        setErrors(err.message);\r\n                    }\r\n                   \r\n                })\r\n       \r\n             } , 2000 );\r\n\r\n             return () => abortCont.abort();\r\n      }, [url]);\r\n\r\n      return {\r\n          data, isLoading , Errors\r\n      }\r\n\r\n}\r\n \r\nexport default useFetch"]},"metadata":{},"sourceType":"module"}