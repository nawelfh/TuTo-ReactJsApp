{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nconst useFetch = (props, url) => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [isLoading, setLoading] = useState(true);\n  const [Errors, setErrors] = useState(null);\n  useEffect(() => {\n    setTimeout(() => {\n      fetch(url).then(res => {\n        if (!res.ok) {\n          throw Error('data couldnt be fetched from ressource');\n        }\n\n        return res.json();\n      }).then(data => {\n        setData(data);\n        setLoading(false);\n        setErrors(null);\n      }).catch(err => {\n        setLoading(false);\n        setErrors(err.message);\n      });\n    }, 2000);\n  }, [url]);\n  return {\n    data,\n    isLoading,\n    Errors\n  };\n};\n\n_s(useFetch, \"A7/WbniOKOGmRHC22kHElmpeYDg=\");\n\nexport default useFetch;","map":{"version":3,"sources":["C:/Users/dell/Desktop/ReactJs/react-app/src/useFetch.js"],"names":["useState","useEffect","useFetch","props","url","data","setData","isLoading","setLoading","Errors","setErrors","setTimeout","fetch","then","res","ok","Error","json","catch","err","message"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAAA;;AAC7B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACO,SAAD,EAAaC,UAAb,IAA2BR,QAAQ,CAAC,IAAD,CAAzC;AACA,QAAM,CAACS,MAAD,EAAUC,SAAV,IAAuBV,QAAQ,CAAE,IAAF,CAArC;AAGAC,EAAAA,SAAS,CAAE,MAAK;AACZU,IAAAA,UAAU,CAAG,MAAI;AACbC,MAAAA,KAAK,CAACR,GAAD,CAAL,CACCS,IADD,CACMC,GAAG,IAAI;AACT,YAAI,CAACA,GAAG,CAACC,EAAT,EAAY;AACR,gBAAMC,KAAK,CAAC,wCAAD,CAAX;AACH;;AACD,eAAOF,GAAG,CAACG,IAAJ,EAAP;AACH,OAND,EAMGJ,IANH,CAOIR,IAAI,IAAI;AACJC,QAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,QAAAA,SAAS,CAAC,IAAD,CAAT;AACH,OAXL,EAWOQ,KAXP,CAWcC,GAAG,IAAG;AACZX,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,QAAAA,SAAS,CAACS,GAAG,CAACC,OAAL,CAAT;AACH,OAdL;AAgBE,KAjBI,EAiBD,IAjBC,CAAV;AAkBD,GAnBM,EAmBJ,CAAChB,GAAD,CAnBI,CAAT;AAqBE,SAAO;AACHC,IAAAA,IADG;AACGE,IAAAA,SADH;AACeE,IAAAA;AADf,GAAP;AAIL,CA/BD;;GAAMP,Q;;AAiCN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst useFetch = (props, url) => {\r\n    const [data, setData] = useState(null);\r\n    const [isLoading , setLoading] = useState(true);\r\n    const [Errors , setErrors] = useState (null);\r\n\r\n\r\n    useEffect( ()=> {\r\n        setTimeout ( ()=>{\r\n            fetch(url)\r\n            .then(res => {\r\n                if (!res.ok){\r\n                    throw Error('data couldnt be fetched from ressource')\r\n                }\r\n                return res.json();\r\n            }).then(\r\n                data => {\r\n                    setData(data);\r\n                    setLoading(false);\r\n                    setErrors(null);\r\n                }).catch (err =>{\r\n                    setLoading(false);\r\n                    setErrors(err.message);\r\n                })\r\n       \r\n             } , 2000 )\r\n      }, [url]);\r\n\r\n      return {\r\n          data, isLoading , Errors\r\n      }\r\n\r\n}\r\n \r\nexport default useFetch;"]},"metadata":{},"sourceType":"module"}